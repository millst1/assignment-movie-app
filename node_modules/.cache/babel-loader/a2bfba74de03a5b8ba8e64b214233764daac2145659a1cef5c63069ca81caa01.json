{"ast":null,"code":"var _jsxFileName = \"/home/thomasmills1vod/Documents/repos/assignment-movie-app/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport GridCardFactory from './GridCardFactory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSearch() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [movieList, setMovieList] = useState([]);\n  const queryMovieAPI = async searchQuery => {\n    setLoading(true);\n    setErrorMessage(\"\");\n    if (searchQuery === \"\") {\n      setLoading(false);\n    } else {\n      try {\n        const response = await axios.get(`https://www.omdbapi.com/?apikey=c0ef8255&s=${searchQuery}`);\n        console.log(response.data);\n        if (response.data.Response === \"True\") {\n          console.log(\"Request Success\");\n          setMovieList(response.data.Search);\n          //console.log(movieList)\n        } else {\n          setErrorMessage(response.data.Error);\n          console.log(\"response.data.response !== True. See error message: \", errorMessage);\n        }\n      } catch (error) {\n        setErrorMessage(error);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: queryMovieAPI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this), errorMessage !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(GridCardFactory, {\n      movies: movieList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieSearch, \"0rY08/1EA7yscQqSwypst9x+JJY=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","axios","SearchBar","GridCardFactory","jsxDEV","_jsxDEV","MovieSearch","_s","loading","setLoading","errorMessage","setErrorMessage","movieList","setMovieList","queryMovieAPI","searchQuery","response","get","console","log","data","Response","Search","Error","error","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","Spinner","movies","_c","$RefreshReg$"],"sources":["/home/thomasmills1vod/Documents/repos/assignment-movie-app/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport SearchBar from './SearchBar';\nimport GridCardFactory from './GridCardFactory';\n\n\nfunction MovieSearch() {\n\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [movieList, setMovieList] = useState([]);\n\n    const queryMovieAPI = async(searchQuery) => {\n        setLoading(true);\n        setErrorMessage(\"\");\n\n        if (searchQuery === \"\") {\n            setLoading(false);\n        } else {\n            try {\n                const response = await axios.get(`https://www.omdbapi.com/?apikey=c0ef8255&s=${searchQuery}`);\n                console.log(response.data);\n\n                if (response.data.Response === \"True\") {\n                    console.log(\"Request Success\");\n                    setMovieList(response.data.Search);\n                    //console.log(movieList)\n                } else {\n                    setErrorMessage(response.data.Error);\n                    console.log(\"response.data.response !== True. See error message: \",errorMessage);\n                }\n\n            } catch (error) {\n                setErrorMessage(error);\n                console.log(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n    } \n\n\n    return (\n        <div>\n            <SearchBar onSearch={queryMovieAPI}/>\n\n            {loading && <Spinner/>}\n            {errorMessage !== \"\" && <p>{errorMessage}</p>}\n\n            <GridCardFactory movies={movieList} />\n        </div>\n    );\n}\n\nexport default MovieSearch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,aAAa,GAAG,MAAMC,WAAW,IAAK;IACxCN,UAAU,CAAC,IAAI,CAAC;IAChBE,eAAe,CAAC,EAAE,CAAC;IAEnB,IAAII,WAAW,KAAK,EAAE,EAAE;MACpBN,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACH,IAAI;QACA,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,8CAA6CF,WAAY,EAAC,CAAC;QAC7FG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAE1B,IAAIJ,QAAQ,CAACI,IAAI,CAACC,QAAQ,KAAK,MAAM,EAAE;UACnCH,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9BN,YAAY,CAACG,QAAQ,CAACI,IAAI,CAACE,MAAM,CAAC;UAClC;QACJ,CAAC,MAAM;UACHX,eAAe,CAACK,QAAQ,CAACI,IAAI,CAACG,KAAK,CAAC;UACpCL,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAACT,YAAY,CAAC;QACpF;MAEJ,CAAC,CAAC,OAAOc,KAAK,EAAE;QACZb,eAAe,CAACa,KAAK,CAAC;QACtBN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACtB,CAAC,SAAS;QACNf,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;EACJ,CAAC;EAGD,oBACIJ,OAAA;IAAAoB,QAAA,gBACIpB,OAAA,CAACH,SAAS;MAACwB,QAAQ,EAAEZ;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAEpCtB,OAAO,iBAAIH,OAAA,CAAC0B,OAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACrBpB,YAAY,KAAK,EAAE,iBAAIL,OAAA;MAAAoB,QAAA,EAAIf;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7CzB,OAAA,CAACF,eAAe;MAAC6B,MAAM,EAAEpB;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd;AAACvB,EAAA,CA9CQD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAgDpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}