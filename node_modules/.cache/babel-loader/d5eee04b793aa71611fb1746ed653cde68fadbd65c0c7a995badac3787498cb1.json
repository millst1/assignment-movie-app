{"ast":null,"code":"var _jsxFileName = \"/home/thomasmills1vod/Documents/repos/assignment-movie-app/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport GridCardFactory from './GridCardFactory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSearch() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [movieList, setMovieList] = useState([]);\n  const queryMovieAPI = async searchQuery => {\n    setLoading(true);\n    setErrorMessage(\"\");\n    try {\n      const response = await axios.get(`https://www.omdbapi.com/?apikey=c0ef8255&s=${searchQuery}`);\n      if (response.data.response === \"True\") {\n        console.log(\"Request Success\");\n        setMovieList(response.data.Search);\n        console.log(movieList);\n      } else {\n        setErrorMessage(response.data);\n        console.log(\"response.data.response !== True. See error message: \", errorMessage);\n      }\n    } catch (error) {\n      setErrorMessage(error);\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: queryMovieAPI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this), errorMessage !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(GridCardFactory, {\n      movies: movieList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieSearch, \"0rY08/1EA7yscQqSwypst9x+JJY=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","axios","SearchBar","GridCardFactory","jsxDEV","_jsxDEV","MovieSearch","_s","loading","setLoading","errorMessage","setErrorMessage","movieList","setMovieList","queryMovieAPI","searchQuery","response","get","data","console","log","Search","error","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","movies","_c","$RefreshReg$"],"sources":["/home/thomasmills1vod/Documents/repos/assignment-movie-app/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport SearchBar from './SearchBar';\nimport GridCardFactory from './GridCardFactory';\n\n\nfunction MovieSearch() {\n\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [movieList, setMovieList] = useState([]);\n\n    const queryMovieAPI = async(searchQuery) => {\n        setLoading(true);\n        setErrorMessage(\"\");\n\n        try {\n            const response = await axios.get(`https://www.omdbapi.com/?apikey=c0ef8255&s=${searchQuery}`);\n\n            if (response.data.response === \"True\") {\n                console.log(\"Request Success\");\n                setMovieList(response.data.Search);\n                console.log(movieList);\n            } else {\n                setErrorMessage(response.data);\n                console.log(\"response.data.response !== True. See error message: \",errorMessage);\n            }\n\n        } catch (error) {\n            setErrorMessage(error);\n            console.log(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n\n    return (\n        <div>\n            <SearchBar onSearch={queryMovieAPI}/>\n\n            {loading && <p>Loading...</p>}\n            {errorMessage !== \"\" && <p>{errorMessage}</p>}\n\n            <GridCardFactory movies={movieList} />\n        </div>\n    );\n}\n\nexport default MovieSearch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,aAAa,GAAG,MAAMC,WAAW,IAAK;IACxCN,UAAU,CAAC,IAAI,CAAC;IAChBE,eAAe,CAAC,EAAE,CAAC;IAEnB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,8CAA6CF,WAAY,EAAC,CAAC;MAE7F,IAAIC,QAAQ,CAACE,IAAI,CAACF,QAAQ,KAAK,MAAM,EAAE;QACnCG,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9BP,YAAY,CAACG,QAAQ,CAACE,IAAI,CAACG,MAAM,CAAC;QAClCF,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC;MAC1B,CAAC,MAAM;QACHD,eAAe,CAACK,QAAQ,CAACE,IAAI,CAAC;QAC9BC,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAACV,YAAY,CAAC;MACpF;IAEJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZX,eAAe,CAACW,KAAK,CAAC;MACtBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB,CAAC,SAAS;MACNb,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAGD,oBACIJ,OAAA;IAAAkB,QAAA,gBACIlB,OAAA,CAACH,SAAS;MAACsB,QAAQ,EAAEV;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAEpCpB,OAAO,iBAAIH,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5BlB,YAAY,KAAK,EAAE,iBAAIL,OAAA;MAAAkB,QAAA,EAAIb;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7CvB,OAAA,CAACF,eAAe;MAAC0B,MAAM,EAAEjB;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd;AAACrB,EAAA,CAzCQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}