{"ast":null,"code":"var _jsxFileName = \"/home/thomasmills1vod/Documents/repos/assignment-movie-app/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport GridCardFactory from './GridCardFactory';\nimport Spinner from './Spinner';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSearch() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [movieList, setMovieList] = useState([]);\n  const [failedQuery, setFailedQuery] = useState(\"\");\n  const queryMovieAPI = async searchQuery => {\n    setLoading(true);\n    setErrorMessage(\"\");\n    setFailedQuery(\"\");\n    if (searchQuery === \"\") {\n      setLoading(false);\n    } else {\n      try {\n        const response = await axios.get(`https://www.omdbapi.com/?apikey=${API_KEY}c0ef8255&s=${searchQuery}`);\n        console.log(response.data);\n        if (response.data.Response === \"True\") {\n          console.log(\"Request Success\");\n          setMovieList(response.data.Search);\n          //console.log(movieList)\n        } else {\n          setErrorMessage(response.data.Error);\n          setFailedQuery(searchQuery);\n          console.log(\"response.data.response !== True. See error message: \", errorMessage);\n        }\n      } catch (error) {\n        setErrorMessage(error);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: queryMovieAPI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this), errorMessage !== \"\" && /*#__PURE__*/_jsxDEV(Alert, {\n      failedQuery: failedQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(GridCardFactory, {\n      movies: movieList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieSearch, \"M1NAwJ+O9MMnlLIDhBCf+eC50nM=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","axios","SearchBar","GridCardFactory","Spinner","Alert","jsxDEV","_jsxDEV","MovieSearch","_s","loading","setLoading","errorMessage","setErrorMessage","movieList","setMovieList","failedQuery","setFailedQuery","queryMovieAPI","searchQuery","response","get","API_KEY","console","log","data","Response","Search","Error","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","movies","_c","$RefreshReg$"],"sources":["/home/thomasmills1vod/Documents/repos/assignment-movie-app/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport SearchBar from './SearchBar';\nimport GridCardFactory from './GridCardFactory';\nimport Spinner from './Spinner';\nimport Alert from './Alert';\n\nfunction MovieSearch() {\n\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [movieList, setMovieList] = useState([]);\n    const [failedQuery, setFailedQuery] = useState(\"\"); \n\n    const queryMovieAPI = async(searchQuery) => {\n        setLoading(true);\n        setErrorMessage(\"\");\n        setFailedQuery(\"\");\n\n        if (searchQuery === \"\") {\n            setLoading(false);\n        } else {\n            try {\n                const response = await axios.get(`https://www.omdbapi.com/?apikey=${API_KEY}c0ef8255&s=${searchQuery}`);\n                console.log(response.data);\n\n                if (response.data.Response === \"True\") {\n                    console.log(\"Request Success\");\n                    setMovieList(response.data.Search);\n                    //console.log(movieList)\n                } else {\n                    setErrorMessage(response.data.Error);\n                    setFailedQuery(searchQuery);\n                    console.log(\"response.data.response !== True. See error message: \",errorMessage);\n                }\n\n            } catch (error) {\n                setErrorMessage(error);\n                console.log(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n    } \n\n\n    return (\n        <div>\n            <h1></h1>\n            <SearchBar onSearch={queryMovieAPI}/>\n\n            {loading && <Spinner/>}\n            {errorMessage !== \"\" && <Alert failedQuery={failedQuery} />}\n\n            <GridCardFactory movies={movieList} />\n        </div>\n    );\n}\n\nexport default MovieSearch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMkB,aAAa,GAAG,MAAMC,WAAW,IAAK;IACxCR,UAAU,CAAC,IAAI,CAAC;IAChBE,eAAe,CAAC,EAAE,CAAC;IACnBI,cAAc,CAAC,EAAE,CAAC;IAElB,IAAIE,WAAW,KAAK,EAAE,EAAE;MACpBR,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACH,IAAI;QACA,MAAMS,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,mCAAkCC,OAAQ,cAAaH,WAAY,EAAC,CAAC;QACvGI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;QAE1B,IAAIL,QAAQ,CAACK,IAAI,CAACC,QAAQ,KAAK,MAAM,EAAE;UACnCH,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9BT,YAAY,CAACK,QAAQ,CAACK,IAAI,CAACE,MAAM,CAAC;UAClC;QACJ,CAAC,MAAM;UACHd,eAAe,CAACO,QAAQ,CAACK,IAAI,CAACG,KAAK,CAAC;UACpCX,cAAc,CAACE,WAAW,CAAC;UAC3BI,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAACZ,YAAY,CAAC;QACpF;MAEJ,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACZhB,eAAe,CAACgB,KAAK,CAAC;QACtBN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACtB,CAAC,SAAS;QACNlB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;EACJ,CAAC;EAGD,oBACIJ,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3B,OAAA,CAACL,SAAS;MAACiC,QAAQ,EAAEjB;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAEpCxB,OAAO,iBAAIH,OAAA,CAACH,OAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACrBtB,YAAY,KAAK,EAAE,iBAAIL,OAAA,CAACF,KAAK;MAACW,WAAW,EAAEA;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3D3B,OAAA,CAACJ,eAAe;MAACiC,MAAM,EAAEtB;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd;AAACzB,EAAA,CAlDQD,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAoDpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}